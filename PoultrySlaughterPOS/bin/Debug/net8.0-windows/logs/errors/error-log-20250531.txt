2025-05-31 22:12:57.409 +03:00 [ERR] Error printing 80mm thermal receipt: 202505310010
System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.PrintOptimizedThermalInvoiceAsync(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 677
2025-05-31 22:12:57.706 +03:00 [ERR] Error executing operation: حفظ وطباعة الفاتورة
System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.PrintOptimizedThermalInvoiceAsync(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 677
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 345
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1651
2025-05-31 22:12:57.710 +03:00 [ERR] Error 23a53735 in حفظ وطباعة الفاتورة: ArgumentException - '∞' is not a valid value for property 'PageHeight'.
System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.PrintOptimizedThermalInvoiceAsync(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 677
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 345
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1651
2025-05-31 22:13:05.339 +03:00 [ERR] Error creating invoice with transaction for customer 1
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
2025-05-31 22:13:05.438 +03:00 [ERR] Error saving bulk invoice
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
2025-05-31 22:13:05.641 +03:00 [ERR] Error executing operation: حفظ وطباعة الفاتورة
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1651
2025-05-31 22:13:05.645 +03:00 [ERR] Error 7a7dd3fb in حفظ وطباعة الفاتورة: InvalidOperationException - The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1651
2025-05-31 22:13:11.907 +03:00 [ERR] Error creating invoice with transaction for customer 1
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
2025-05-31 22:13:12.068 +03:00 [ERR] Error saving bulk invoice
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
2025-05-31 22:13:12.264 +03:00 [ERR] Error executing operation: حفظ وطباعة الفاتورة
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1651
2025-05-31 22:13:12.266 +03:00 [ERR] Error 6b4f8fc5 in حفظ وطباعة الفاتورة: InvalidOperationException - The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1651
2025-05-31 22:13:14.356 +03:00 [ERR] Error creating invoice with transaction for customer 1
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
2025-05-31 22:13:14.494 +03:00 [ERR] Error saving bulk invoice
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
2025-05-31 22:13:14.684 +03:00 [ERR] Error executing operation: حفظ وطباعة الفاتورة
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1651
2025-05-31 22:13:14.690 +03:00 [ERR] Error 534917de in حفظ وطباعة الفاتورة: InvalidOperationException - The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1651
2025-05-31 22:13:23.474 +03:00 [ERR] Error creating invoice with transaction for customer 1
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
2025-05-31 22:13:23.572 +03:00 [ERR] Error saving bulk invoice
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
2025-05-31 22:13:23.706 +03:00 [ERR] Error executing operation: حفظ وطباعة الفاتورة
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1651
2025-05-31 22:13:23.710 +03:00 [ERR] Error d3d48897 in حفظ وطباعة الفاتورة: InvalidOperationException - The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1461
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1651
2025-05-31 22:20:34.188 +03:00 [ERR] Error printing 80mm thermal receipt: 202505310011
System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.PrintOptimizedThermalInvoiceAsync(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 677
2025-05-31 22:20:34.556 +03:00 [ERR] Error executing operation: حفظ وطباعة الفاتورة
System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.PrintOptimizedThermalInvoiceAsync(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 677
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 345
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1776
2025-05-31 22:20:34.564 +03:00 [ERR] Error 2cea4190 in حفظ وطباعة الفاتورة: ArgumentException - '∞' is not a valid value for property 'PageHeight'.
System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.PrintOptimizedThermalInvoiceAsync(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 677
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 345
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1776
2025-05-31 22:20:40.942 +03:00 [ERR] Error creating invoice with transaction for customer 1
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
2025-05-31 22:20:41.049 +03:00 [ERR] Error saving bulk invoice
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1586
2025-05-31 22:20:41.166 +03:00 [ERR] Error executing operation: حفظ وطباعة الفاتورة
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1586
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1776
2025-05-31 22:20:41.171 +03:00 [ERR] Error 0769150a in حفظ وطباعة الفاتورة: InvalidOperationException - The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1586
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1776
2025-05-31 22:20:52.810 +03:00 [ERR] Error creating invoice with transaction for customer 1
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
2025-05-31 22:20:52.889 +03:00 [ERR] Error saving bulk invoice
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1586
2025-05-31 22:20:53.027 +03:00 [ERR] Error executing operation: حفظ وطباعة الفاتورة
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1586
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1776
2025-05-31 22:20:53.030 +03:00 [ERR] Error e8025008 in حفظ وطباعة الفاتورة: InvalidOperationException - The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
System.InvalidOperationException: The instance of entity type 'Customer' cannot be tracked because another instance with the same key value for {'CustomerId'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.ThrowIdentityConflict(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry, Boolean updateDuplicate)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(TKey key, InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, Boolean acceptChanges, Boolean modifyProperties)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(EntityState entityState, Boolean acceptChanges, Boolean modifyProperties, Nullable`1 forceStateWhenUnknownKey, Nullable`1 fallbackState, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintActionAsync(EntityEntryGraphNode`1 node, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraphAsync[TState](EntityEntryGraphNode`1 node, Func`3 handleNode, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraphAsync(InternalEntityEntry rootEntry, EntityState targetState, EntityState storeGeneratedWithKeySetTargetState, Boolean forceStateWhenUnknownKey, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(TEntity entity, CancellationToken cancellationToken)
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 230
   at PoultrySlaughterPOS.Repositories.InvoiceRepository.CreateInvoiceWithTransactionAsync(Invoice invoice, CancellationToken cancellationToken) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\Services\Repositories\Implementations\InvoiceRepository.cs:line 248
   at PoultrySlaughterPOS.ViewModels.POSViewModel.SaveInvoiceInternalAsync() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1586
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<SaveAndPrintInvoiceAsync>b__77_0() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 342
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecuteWithErrorHandlingAsync(Func`1 operation, String operationName) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 1776
2025-05-31 22:23:42.129 +03:00 [ERR] Error creating thermal document on UI thread
System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.CreateThermalDocumentOnUIThread(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 728
2025-05-31 22:23:42.210 +03:00 [ERR] Error in thermal printing UI thread operation: 202505310012
System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.CreateThermalDocumentOnUIThread(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 728
   at PoultrySlaughterPOS.ViewModels.POSViewModel.<>c__DisplayClass89_0.<<PrintOptimizedThermalInvoiceAsync>b__0>d.MoveNext() in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 673
2025-05-31 22:28:20.698 +03:00 [ERR] Error applying validated thermal settings
System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ApplyValidatedThermalSettings(FlowDocument document) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 854
2025-05-31 22:28:20.775 +03:00 [ERR] Error creating validated thermal document
System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ApplyValidatedThermalSettings(FlowDocument document) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 854
   at PoultrySlaughterPOS.ViewModels.POSViewModel.CreateValidatedThermalDocument(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 802
2025-05-31 22:28:20.814 +03:00 [ERR] Error in print dialog execution pipeline
System.InvalidOperationException: Failed to create thermal document
 ---> System.ArgumentException: '∞' is not a valid value for property 'PageHeight'.
   at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal)
   at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value)
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ApplyValidatedThermalSettings(FlowDocument document) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 854
   at PoultrySlaughterPOS.ViewModels.POSViewModel.CreateValidatedThermalDocument(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 802
   --- End of inner exception stack trace ---
   at PoultrySlaughterPOS.ViewModels.POSViewModel.CreateValidatedThermalDocument(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 816
   at PoultrySlaughterPOS.ViewModels.POSViewModel.ExecutePrintDialogWithDiagnostics(Invoice invoice) in C:\Users\$\Desktop\PoultrySlaughterPOS\PoultrySlaughterPOS\ViewModels\POSViewModel.cs:line 729
